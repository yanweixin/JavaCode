/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    java

    // Apply the application plugin to add support for building a CLI application.
    application
}

java {
    sourceCompatibility = org.gradle.api.JavaVersion.VERSION_14
    targetCompatibility = org.gradle.api.JavaVersion.VERSION_14
}

val log4j2Version by extra("2.13.3")

allprojects {
    repositories {
        // Use jcenter for resolving dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
    }
}
subprojects {
    version = "1.0"
}

dependencies {
    implementation(project(":groovy"))
    implementation(project(":kotlin"))
    // This dependency is used by the application.
    implementation("com.google.guava:guava:29.0-jre")

    // Use SLF4J with log4j2
    implementation("org.slf4j:slf4j-api:1.7.30")
    implementation("org.apache.logging.log4j:log4j-core:$log4j2Version")
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version")
    implementation("org.apache.logging.log4j:log4j-mongodb3:$log4j2Version")

    // Database Driver
    runtimeOnly("org.mongodb:mongo-java-driver:3.12.5")

    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
}

application {
    // Define the main class for the application.
    mainClassName = "code.App"
}

val test by tasks.getting(Test::class) {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

tasks.wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
